{
	// See https://go.microsoft.com/fwlink/?LinkId=733558
	// for the documentation about the tasks.json format
	"version": "2.0.0",
	"tasks": [
		{
      "label": "seed mongodb",
      "type": "shell",
      "command": "dotnet run --no-restore --no-build --port ${input:mongodbPort} --only-drop ${input:onlyDrop} --ci ${input:ci}",
      "options": {
        "cwd": "${workspaceFolder}/Seeding/",
      },
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },{
      "label": "seed mongodb CI",
      "type": "shell",
      "command": "dotnet run --no-restore --no-build --port ${input:mongodbPort} --ci",
      "options": {
        "cwd": "${workspaceFolder}/Seeding/",
      },
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "npm run e2e",
      "type": "shell",
      "command": "npm run e2e",
      "options": {
        "cwd": "${workspaceFolder}/client/",
      },
      "problemMatcher": [],
      "dependsOn": ["seed mongodb CI"],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },

		// client
		{
      "type": "npm",
			"options": {
				"cwd": "${workspaceFolder}/client"
			},
      "script": "start",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      }
    },
		{
      "type": "npm",
			"options": {
				"cwd": "${workspaceFolder}/client"
			},
      "script": "test",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      }
    },

		// docker mongodb
		{
      "label": "docker compose mongo up",
      "type": "shell",
      "command": "docker compose -f ./Application/docker-compose.mongo-container.yml up -d",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
    },
		{
      "label": "docker compose mongo stop",
      "type": "shell",
      "command": "docker compose -f ./Application/docker-compose.mongo-container.yml stop",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
    },
		{
      "label": "docker compose mongo down",
      "type": "shell",
      "command": "docker compose -f ./Application/docker-compose.mongo-container.yml down",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
    }
	],
  "inputs": [
    {
      "id": "mongodbPort",
      "type": "promptString",
      "description": "Enter MongoDB port (default: 27020 for Dockerized, 27017 for local)",
      "default": "27020"
    },
    {
        "id": "onlyDrop",
        "type": "pickString",
        "description": "Do you want to only drop the mongodb?",
        "options": [
            "true",
            "false"
        ],
        "default": "false"
    },
    {
        "id": "ci",
        "type": "pickString",
        "description": "Run fast (smaller) seeding? (intended for ci)",
        "options": [
          "false",
          "true"
        ],
        "default": "true"
    }
  ]
}
